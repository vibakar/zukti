


!function() {
     var e = void 0;
     ! function(t) {
         if ("object" == typeof exports) module.exports = t();
         else if ("function" == typeof e && e.amd) e(t);
         else {
             var n;
             "undefined" != typeof window ? n = window : "undefined" != typeof global ? n = global : "undefined" != typeof self && (n = self), n.Spellchecker = t()
         }
     }(function() {
         return function e(t, n, r) {
              function i(a, s) {
                  if (!n[a]) {
                      if (!t[a]) {
                          var u = "function" == typeof require && require;
                          if (!s && u) return u(a, !0);
                          if (o) return o(a, !0);
                          throw new Error("Cannot find module '" + a + "'")
                      }
                      var f = n[a] = {
                          exports: {}
                      };
                      t[a][0].call(f.exports, function(e) {
                          var n = t[a][1][e];
                          return i(n ? n : e)
                      }, f, f.exports, e, t, n, r)
                  }
                  return n[a].exports
              }
              for (var o = "function" == typeof require && require, a = 0; a < r.length; a++) i(r[a]);
              return i
          }({
              1: [function(e, t) {
                  (function() {
                      var e = function(e) {
                          this.rules = {}, this.dictionaryTable = {}, this.compoundRules = [], this.compoundRuleCodes = {}, this.replacementTable = [], this.flags = {}, e && this.load(e)
                      };
                      e.prototype.load = function(e) {
                          for (var t in e) this[t] = e[t]
                      }, e.prototype.toJSON = function() {
                          return {
                              rules: this.rules,
                              dictionaryTable: this.dictionaryTable,
                              compoundRules: this.compoundRules,
                              compoundRuleCodes: this.compoundRuleCodes,
                              replacementTable: this.replacementTable,
                              flags: this.flags
                          }
                      }, e.prototype.parse = function(e) {
                          if (!e.aff && !e.dic) throw "Invalid dictionary to parse";
                          this.rules = this._parseAFF("" + e.aff), this.compoundRuleCodes = {};
                          for (var t = 0, n = this.compoundRules.length; n > t; t++)
                              for (var r = this.compoundRules[t], i = 0, o = r.length; o > i; i++) this.compoundRuleCodes[r[i]] = [];
                          "ONLYINCOMPOUND" in this.flags && (this.compoundRuleCodes[this.flags.ONLYINCOMPOUND] = []), this.dictionaryTable = this._parseDIC("" + e.dic);
                          for (var t in this.compoundRuleCodes) 0 == this.compoundRuleCodes[t].length && delete this.compoundRuleCodes[t];
                          for (var t = 0, n = this.compoundRules.length; n > t; t++) {
                              for (var a = this.compoundRules[t], s = "", i = 0, o = a.length; o > i; i++) {
                                  var u = a[i];
                                  s += u in this.compoundRuleCodes ? "(" + this.compoundRuleCodes[u].join("|") + ")" : u
                              }
                              this.compoundRules[t] = new RegExp(s, "i")
                          }
                      }, e.prototype._parseAFF = function(e) {
                          var t = {};
                          e = this._removeAffixComments(e);
                          for (var n = e.split("n"), r = 0, i = n.length; i > r; r++) {
                              var o = n[r],
                                  a = o.split(/s+/),
                                  s = a[0];
                              if ("PFX" == s || "SFX" == s) {
                                  for (var u = a[1], f = a[2], l = parseInt(a[3], 10), c = [], h = r + 1, d = r + 1 + l; d > h; h++) {
                                      var o = n[h],
                                          p = o.split(/s+/),
                                          g = p[2],
                                          v = p[3].split("/"),
                                          y = v[0];
                                      "0" === y && (y = "");
                                      var m = this.parseRuleCodes(v[1]),
                                          b = p[4],
                                          w = {};
                                      w.add = y, m.length > 0 && (w.continuationClasses = m), "." !== b && (w.match = new RegExp("SFX" === s ? b + "$" : "^" + b)), "0" != g && (w.remove = "SFX" === s ? new RegExp(g + "$") : g), c.push(w)
                                  }
                                  t[u] = {
                                      type: s,
                                      combineable: "Y" == f,
                                      entries: c
                                  }, r += l
                              } else if ("COMPOUNDRULE" === s) {
                                  for (var l = parseInt(a[1], 10), h = r + 1, d = r + 1 + l; d > h; h++) {
                                      var o = n[h],
                                          p = o.split(/s+/);
                                      this.compoundRules.push(p[1])
                                  }
                                  r += l
                              } else if ("REP" === s) {
                                  var p = o.split(/s+/);
                                  3 === p.length && this.replacementTable.push([p[1], p[2]])
                              } else this.flags[s] = a[1]
                          }
                          return t
                      }, e.prototype._removeAffixComments = function(e) {
                          return e = e.replace(/#.*$/gm, ""), e = e.replace(/^ss*/m, "").replace(/ss*$/m, ""), e = e.replace(/n{2,}/g, "n"), e = e.replace(/^ss*/, "").replace(/ss*$/, "")
                      }, e.prototype._parseDIC = function(e) {
                          function t(e, t) {
                              e in r && "object" == typeof r[e] || (r[e] = []), r[e].push(t)
                          }
                          e = this._removeDicComments(e);
                          for (var n = e.split("n"), r = {}, i = 1, o = n.length; o > i; i++) {
                              var a = n[i],
                                  s = a.split("/", 2),
                                  u = s[0];
                              if (s.length > 1) {
                                  var f = this.parseRuleCodes(s[1]);
                                  "NEEDAFFIX" in this.flags && -1 != f.indexOf(this.flags.NEEDAFFIX) || t(u, f);
                                  for (var l = 0, c = f.length; c > l; l++) {
                                      var h = f[l],
                                          d = this.rules[h];
                                      if (d)
                                          for (var p = this._applyRule(u, d), g = 0, v = p.length; v > g; g++) {
                                              var y = p[g];
                                              if (t(y, []), d.combineable)
                                                  for (var m = l + 1; c > m; m++) {
                                                      var b = f[m],
                                                          w = this.rules[b];
                                                      if (w && w.combineable && d.type != w.type)
                                                          for (var E = this._applyRule(y, w), I = 0, C = E.length; C > I; I++) {
                                                              var L = E[I];
                                                              t(L, [])
                                                          }
                                                  }
                                          }
                                      h in this.compoundRuleCodes && this.compoundRuleCodes[h].push(u)
                                  }
                              } else t(u.trim(), [])
                          }
                          return r
                      }, e.prototype._removeDicComments = function(e) {
                          return e = e.replace(/^t.*$/gm, "")
                      }, e.prototype.parseRuleCodes = function(e) {
                          if (!e) return [];
                          if (!("FLAG" in this.flags)) return e.split("");
                          if ("long" === this.flags.FLAG) {
                              for (var t = [], n = 0, r = e.length; r > n; n += 2) t.push(e.substr(n, 2));
                              return t
                          }
                          return "num" === this.flags.FLAG ? e.split(",") : void 0
                      }, e.prototype._applyRule = function(e, t) {
                          for (var n = t.entries, r = [], i = 0, o = n.length; o > i; i++) {
                              var a = n[i];
                              if (!a.match || e.match(a.match)) {
                                  var s = e;
                                  if (a.remove && (s = s.replace(a.remove, "")), "SFX" === t.type ? s += a.add : s = a.add + s, r.push(s), "continuationClasses" in a)
                                      for (var u = 0, f = a.continuationClasses.length; f > u; u++) {
                                          var l = this.rules[a.continuationClasses[u]];
                                          l && (r = r.concat(this._applyRule(s, l)))
                                      }
                              }
                          }
                          return r
                      }, t.exports = e
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/dictionary.js", "/")
              }, {
                  buffer: 4,
                  qC859L: 6
              }],
              2: [function(e, t) {
                  (function() {
                      var n = e("./dictionary"),
                          r = function(e) {
                              this.dict = null, e && this.use(e)
                          };
                      r.prototype.use = function(e) {
                          this.dict = new n(e)
                      }, r.prototype.parse = function(e) {
                          var t = new n;
                          return t.parse(e), this.use(t), t.toJSON()
                      }, r.prototype.check = function(e) {
                          var t = e.replace(/^ss*/, "").replace(/ss*$/, "");
                          if (this.checkExact(t)) return !0;
                          if (t.toUpperCase() === t) {
                              var n = t[0] + t.substring(1).toLowerCase();
                              if (this.hasFlag(n, "KEEPCASE")) return !1;
                              if (this.checkExact(n)) return !0
                          }
                          var r = t.toLowerCase();
                          if (r !== t) {
                              if (this.hasFlag(r, "KEEPCASE")) return !1;
                              if (this.checkExact(r)) return !0
                          }
                          return !1
                      }, r.prototype.checkExact = function(e) {
                          var t = this.dict.dictionaryTable[e];
                          if ("undefined" == typeof t) {
                              if ("COMPOUNDMIN" in this.dict.flags && e.length >= this.dict.flags.COMPOUNDMIN)
                                  for (var n = 0, r = this.dict.compoundRules.length; r > n; n++)
                                      if (e.match(this.dict.compoundRules[n])) return !0;
                              return !1
                          }
                          for (var n = 0, r = t.length; r > n; n++)
                              if (!this.hasFlag(e, "ONLYINCOMPOUND", t[n])) return !0;
                          return !1
                      }, r.prototype.hasFlag = function(e, t, n) {
                          if (t in this.dict.flags) {
                              if ("undefined" == typeof n) var n = Array.prototype.concat.apply([], this.dict.dictionaryTable[e]);
                              if (n && -1 !== n.indexOf(this.dict.flags[t])) return !0
                          }
                          return !1
                      }, r.prototype.suggest = function(e, t) {
                          function n(e) {
                              for (var t = [], n = 0, r = e.length; r > n; n++) {
                                  for (var i = e[n], o = [], a = 0, s = i.length + 1; s > a; a++) o.push([i.substring(0, a), i.substring(a, i.length)]);
                                  for (var u = [], a = 0, s = o.length; s > a; a++) {
                                      var l = o[a];
                                      l[1] && u.push(l[0] + l[1].substring(1))
                                  }
                                  for (var c = [], a = 0, s = o.length; s > a; a++) {
                                      var l = o[a];
                                      l[1].length > 1 && c.push(l[0] + l[1][1] + l[1][0] + l[1].substring(2))
                                  }
                                  for (var h = [], a = 0, s = o.length; s > a; a++) {
                                      var l = o[a];
                                      if (l[1])
                                          for (var d = 0, p = f.dict.alphabet.length; p > d; d++) h.push(l[0] + f.dict.alphabet[d] + l[1].substring(1))
                                  }
                                  for (var g = [], a = 0, s = o.length; s > a; a++) {
                                      var l = o[a];
                                      if (l[1])
                                          for (var d = 0, p = f.dict.alphabet.length; p > d; d++) h.push(l[0] + f.dict.alphabet[d] + l[1])
                                  }
                                  t = t.concat(u), t = t.concat(c), t = t.concat(h), t = t.concat(g)
                              }
                              return t
                          }

                          function r(e) {
                              for (var t = [], n = 0; n < e.length; n++) f.check(e[n]) && t.push(e[n]);
                              return t
                          }

                          function i(e) {
                              function i(e, t) {
                                  return e[1] < t[1] ? -1 : 1
                              }
                              for (var o = n([e]), a = n(o), s = r(o).concat(r(a)), u = {}, l = 0, c = s.length; c > l; l++) s[l] in u ? u[s[l]] += 1 : u[s[l]] = 1;
                              var h = [];
                              for (var l in u) h.push([l, u[l]]);
                              h.sort(i).reverse();
                              for (var d = [], l = 0, c = Math.min(t, h.length); c > l; l++) f.hasFlag(h[l][0], "NOSUGGEST") || d.push(h[l][0]);
                              return d
                          }
                          if (t || (t = 5), this.check(e)) return [];
                          for (var o = 0, a = this.dict.replacementTable.length; a > o; o++) {
                              var s = this.dict.replacementTable[o];
                              if (-1 !== e.indexOf(s[0])) {
                                  var u = e.replace(s[0], s[1]);
                                  if (this.check(u)) return [u]
                              }
                          }
                          var f = this;
                          return f.dict.alphabet = "abcdefghijklmnopqrstuvwxyz", i(e)
                      }, t.exports = r
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/fake_6d11205c.js", "/")
              }, {
                  "./dictionary": 1,
                  buffer: 4,
                  qC859L: 6
              }],
              3: [function(e, t, n) {
                  (function() {
                      var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
                      ! function(t) {
                          "use strict";

                          function n(e) {
                              var t = e.charCodeAt(0);
                              return t === a || t === c ? 62 : t === s || t === h ? 63 : u > t ? -1 : u + 10 > t ? t - u + 26 + 26 : l + 26 > t ? t - l : f + 26 > t ? t - f + 26 : void 0
                          }

                          function r(e) {
                              function t(e) {
                                  f[c++] = e
                              }
                              var r, i, a, s, u, f;
                              if (e.length % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                              var l = e.length;
                              u = "=" === e.charAt(l - 2) ? 2 : "=" === e.charAt(l - 1) ? 1 : 0, f = new o(3 * e.length / 4 - u), a = u > 0 ? e.length - 4 : e.length;
                              var c = 0;
                              for (r = 0, i = 0; a > r; r += 4, i += 3) s = n(e.charAt(r)) << 18 | n(e.charAt(r + 1)) << 12 | n(e.charAt(r + 2)) << 6 | n(e.charAt(r + 3)), t((16711680 & s) >> 16), t((65280 & s) >> 8), t(255 & s);
                              return 2 === u ? (s = n(e.charAt(r)) << 2 | n(e.charAt(r + 1)) >> 4, t(255 & s)) : 1 === u && (s = n(e.charAt(r)) << 10 | n(e.charAt(r + 1)) << 4 | n(e.charAt(r + 2)) >> 2, t(s >> 8 & 255), t(255 & s)), f
                          }

                          function i(t) {
                              function n(t) {
                                  return e.charAt(t)
                              }

                              function r(e) {
                                  return n(e >> 18 & 63) + n(e >> 12 & 63) + n(e >> 6 & 63) + n(63 & e)
                              }
                              var i, o, a, s = t.length % 3,
                                  u = "";
                              for (i = 0, a = t.length - s; a > i; i += 3) o = (t[i] << 16) + (t[i + 1] << 8) + t[i + 2], u += r(o);
                              switch (s) {
                                  case 1:
                                      o = t[t.length - 1], u += n(o >> 2), u += n(o << 4 & 63), u += "==";
                                      break;
                                  case 2:
                                      o = (t[t.length - 2] << 8) + t[t.length - 1], u += n(o >> 10), u += n(o >> 4 & 63), u += n(o << 2 & 63), u += "="
                              }
                              return u
                          }
                          var o = "undefined" != typeof Uint8Array ? Uint8Array : Array,
                              a = "+".charCodeAt(0),
                              s = "/".charCodeAt(0),
                              u = "0".charCodeAt(0),
                              f = "a".charCodeAt(0),
                              l = "A".charCodeAt(0),
                              c = "-".charCodeAt(0),
                              h = "_".charCodeAt(0);
                          t.toByteArray = r, t.fromByteArray = i
                      }("undefined" == typeof n ? this.base64js = {} : n)
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/..\node_modules\base64-js\lib\b64.js", "/..\node_modules\base64-js\lib")
              }, {
                  buffer: 4,
                  qC859L: 6
              }],
              4: [function(e, t, n) {
                  (function(t, r, i) {
                      function i(e, t, n) {
                          if (!(this instanceof i)) return new i(e, t, n);
                          var r = typeof e;
                          if ("base64" === t && "string" === r)
                              for (e = N(e); e.length % 4 !== 0;) e += "=";
                          var o;
                          if ("number" === r) o = T(e);
                          else if ("string" === r) o = i.byteLength(e, t);
                          else {
                              if ("object" !== r) throw new Error("First argument needs to be a number, array or string.");
                              o = T(e.length)
                          }
                          var a;
                          i._useTypedArrays ? a = i._augment(new Uint8Array(o)) : (a = this, a.length = o, a._isBuffer = !0);
                          var s;
                          if (i._useTypedArrays && "number" == typeof e.byteLength) a._set(e);
                          else if (F(e))
                              for (s = 0; o > s; s++) a[s] = i.isBuffer(e) ? e.readUInt8(s) : e[s];
                          else if ("string" === r) a.write(e, 0, t);
                          else if ("number" === r && !i._useTypedArrays && !n)
                              for (s = 0; o > s; s++) a[s] = 0;
                          return a
                      }

                      function o(e, t, n, r) {
                          n = Number(n) || 0;
                          var o = e.length - n;
                          r ? (r = Number(r), r > o && (r = o)) : r = o;
                          var a = t.length;
                          Y(a % 2 === 0, "Invalid hex string"), r > a / 2 && (r = a / 2);
                          for (var s = 0; r > s; s++) {
                              var u = parseInt(t.substr(2 * s, 2), 16);
                              Y(!isNaN(u), "Invalid hex string"), e[n + s] = u
                          }
                          return i._charsWritten = 2 * s, s
                      }

                      function a(e, t, n, r) {
                          var o = i._charsWritten = j(x(t), e, n, r);
                          return o
                      }

                      function s(e, t, n, r) {
                          var o = i._charsWritten = j(M(t), e, n, r);
                          return o
                      }

                      function u(e, t, n, r) {
                          return s(e, t, n, r)
                      }

                      function f(e, t, n, r) {
                          var o = i._charsWritten = j(D(t), e, n, r);
                          return o
                      }

                      function l(e, t, n, r) {
                          var o = i._charsWritten = j(O(t), e, n, r);
                          return o
                      }

                      function c(e, t, n) {
                          return G.fromByteArray(0 === t && n === e.length ? e : e.slice(t, n))
                      }

                      function h(e, t, n) {
                          var r = "",
                              i = "";
                          n = Math.min(e.length, n);
                          for (var o = t; n > o; o++) e[o] <= 127 ? (r += q(i) + String.fromCharCode(e[o]), i = "") : i += "%" + e[o].toString(16);
                          return r + q(i)
                      }

                      function d(e, t, n) {
                          var r = "";
                          n = Math.min(e.length, n);
                          for (var i = t; n > i; i++) r += String.fromCharCode(e[i]);
                          return r
                      }

                      function p(e, t, n) {
                          return d(e, t, n)
                      }

                      function g(e, t, n) {
                          var r = e.length;
                          (!t || 0 > t) && (t = 0), (!n || 0 > n || n > r) && (n = r);
                          for (var i = "", o = t; n > o; o++) i += k(e[o]);
                          return i
                      }

                      function v(e, t, n) {
                          for (var r = e.slice(t, n), i = "", o = 0; o < r.length; o += 2) i += String.fromCharCode(r[o] + 256 * r[o + 1]);
                          return i
                      }

                      function y(e, t, n, r) {
                          r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(void 0 !== t && null !== t, "missing offset"), Y(t + 1 < e.length, "Trying to read beyond buffer length"));
                          var i = e.length;
                          if (!(t >= i)) {
                              var o;
                              return n ? (o = e[t], i > t + 1 && (o |= e[t + 1] << 8)) : (o = e[t] << 8, i > t + 1 && (o |= e[t + 1])), o
                          }
                      }

                      function m(e, t, n, r) {
                          r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(void 0 !== t && null !== t, "missing offset"), Y(t + 3 < e.length, "Trying to read beyond buffer length"));
                          var i = e.length;
                          if (!(t >= i)) {
                              var o;
                              return n ? (i > t + 2 && (o = e[t + 2] << 16), i > t + 1 && (o |= e[t + 1] << 8), o |= e[t], i > t + 3 && (o += e[t + 3] << 24 >>> 0)) : (i > t + 1 && (o = e[t + 1] << 16), i > t + 2 && (o |= e[t + 2] << 8), i > t + 3 && (o |= e[t + 3]), o += e[t] << 24 >>> 0), o
                          }
                      }

                      function b(e, t, n, r) {
                          r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(void 0 !== t && null !== t, "missing offset"), Y(t + 1 < e.length, "Trying to read beyond buffer length"));
                          var i = e.length;
                          if (!(t >= i)) {
                              var o = y(e, t, n, !0),
                                  a = 32768 & o;
                              return a ? -1 * (65535 - o + 1) : o
                          }
                      }

                      function w(e, t, n, r) {
                          r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(void 0 !== t && null !== t, "missing offset"), Y(t + 3 < e.length, "Trying to read beyond buffer length"));
                          var i = e.length;
                          if (!(t >= i)) {
                              var o = m(e, t, n, !0),
                                  a = 2147483648 & o;
                              return a ? -1 * (4294967295 - o + 1) : o
                          }
                      }

                      function E(e, t, n, r) {
                          return r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(t + 3 < e.length, "Trying to read beyond buffer length")), J.read(e, t, n, 23, 4)
                      }

                      function I(e, t, n, r) {
                          return r || (Y("boolean" == typeof n, "missing or invalid endian"), Y(t + 7 < e.length, "Trying to read beyond buffer length")), J.read(e, t, n, 52, 8)
                      }

                      function C(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 1 < e.length, "trying to write beyond buffer length"), P(t, 65535));
                          var o = e.length;
                          if (!(n >= o))
                              for (var a = 0, s = Math.min(o - n, 2); s > a; a++) e[n + a] = (t & 255 << 8 * (r ? a : 1 - a)) >>> 8 * (r ? a : 1 - a)
                      }

                      function L(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 3 < e.length, "trying to write beyond buffer length"), P(t, 4294967295));
                          var o = e.length;
                          if (!(n >= o))
                              for (var a = 0, s = Math.min(o - n, 4); s > a; a++) e[n + a] = t >>> 8 * (r ? a : 3 - a) & 255
                      }

                      function A(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 1 < e.length, "Trying to write beyond buffer length"), X(t, 32767, -32768));
                          var o = e.length;
                          n >= o || (t >= 0 ? C(e, t, n, r, i) : C(e, 65535 + t + 1, n, r, i))
                      }

                      function B(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 3 < e.length, "Trying to write beyond buffer length"), X(t, 2147483647, -2147483648));
                          var o = e.length;
                          n >= o || (t >= 0 ? L(e, t, n, r, i) : L(e, 4294967295 + t + 1, n, r, i))
                      }

                      function U(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 3 < e.length, "Trying to write beyond buffer length"), $(t, 3.4028234663852886e38, -3.4028234663852886e38));
                          var o = e.length;
                          n >= o || J.write(e, t, n, r, 23, 4)
                      }

                      function _(e, t, n, r, i) {
                          i || (Y(void 0 !== t && null !== t, "missing value"), Y("boolean" == typeof r, "missing or invalid endian"), Y(void 0 !== n && null !== n, "missing offset"), Y(n + 7 < e.length, "Trying to write beyond buffer length"), $(t, 1.7976931348623157e308, -1.7976931348623157e308));
                          var o = e.length;
                          n >= o || J.write(e, t, n, r, 52, 8)
                      }

                      function N(e) {
                          return e.trim ? e.trim() : e.replace(/^s+|s+$/g, "")
                      }

                      function S(e, t, n) {
                          return "number" != typeof e ? n : (e = ~~e, e >= t ? t : e >= 0 ? e : (e += t, e >= 0 ? e : 0))
                      }

                      function T(e) {
                          return e = ~~Math.ceil(+e), 0 > e ? 0 : e
                      }

                      function R(e) {
                          return (Array.isArray || function(e) {
                              return "[object Array]" === Object.prototype.toString.call(e)
                          })(e)
                      }

                      function F(e) {
                          return R(e) || i.isBuffer(e) || e && "object" == typeof e && "number" == typeof e.length
                      }

                      function k(e) {
                          return 16 > e ? "0" + e.toString(16) : e.toString(16)
                      }

                      function x(e) {
                          for (var t = [], n = 0; n < e.length; n++) {
                              var r = e.charCodeAt(n);
                              if (127 >= r) t.push(e.charCodeAt(n));
                              else {
                                  var i = n;
                                  r >= 55296 && 57343 >= r && n++;
                                  for (var o = encodeURIComponent(e.slice(i, n + 1)).substr(1).split("%"), a = 0; a < o.length; a++) t.push(parseInt(o[a], 16))
                              }
                          }
                          return t
                      }

                      function M(e) {
                          for (var t = [], n = 0; n < e.length; n++) t.push(255 & e.charCodeAt(n));
                          return t
                      }

                      function O(e) {
                          for (var t, n, r, i = [], o = 0; o < e.length; o++) t = e.charCodeAt(o), n = t >> 8, r = t % 256, i.push(r), i.push(n);
                          return i
                      }

                      function D(e) {
                          return G.toByteArray(e)
                      }

                      function j(e, t, n, r) {
                          for (var i = 0; r > i && !(i + n >= t.length || i >= e.length); i++) t[i + n] = e[i];
                          return i
                      }

                      function q(e) {
                          try {
                              return decodeURIComponent(e)
                          } catch (t) {
                              return String.fromCharCode(65533)
                          }
                      }

                      function P(e, t) {
                          Y("number" == typeof e, "cannot write a non-number as a number"), Y(e >= 0, "specified a negative value for writing an unsigned value"), Y(t >= e, "value is larger than maximum value for type"), Y(Math.floor(e) === e, "value has a fractional component")
                      }

                      function X(e, t, n) {
                          Y("number" == typeof e, "cannot write a non-number as a number"), Y(t >= e, "value larger than maximum allowed value"), Y(e >= n, "value smaller than minimum allowed value"), Y(Math.floor(e) === e, "value has a fractional component")
                      }

                      function $(e, t, n) {
                          Y("number" == typeof e, "cannot write a non-number as a number"), Y(t >= e, "value larger than maximum allowed value"), Y(e >= n, "value smaller than minimum allowed value")
                      }

                      function Y(e, t) {
                          if (!e) throw new Error(t || "Failed assertion")
                      }
                      var G = e("base64-js"),
                          J = e("ieee754");
                      n.Buffer = i, n.SlowBuffer = i, n.INSPECT_MAX_BYTES = 50, i.poolSize = 8192, i._useTypedArrays = function() {
                          try {
                              var e = new ArrayBuffer(0),
                                  t = new Uint8Array(e);
                              return t.foo = function() {
                                  return 42
                              }, 42 === t.foo() && "function" == typeof t.subarray
                          } catch (n) {
                              return !1
                          }
                      }(), i.isEncoding = function(e) {
                          switch (String(e).toLowerCase()) {
                              case "hex":
                              case "utf8":
                              case "utf-8":
                              case "ascii":
                              case "binary":
                              case "base64":
                              case "raw":
                              case "ucs2":
                              case "ucs-2":
                              case "utf16le":
                              case "utf-16le":
                                  return !0;
                              default:
                                  return !1
                          }
                      }, i.isBuffer = function(e) {
                          return !(null === e || void 0 === e || !e._isBuffer)
                      }, i.byteLength = function(e, t) {
                          var n;
                          switch (e += "", t || "utf8") {
                              case "hex":
                                  n = e.length / 2;
                                  break;
                              case "utf8":
                              case "utf-8":
                                  n = x(e).length;
                                  break;
                              case "ascii":
                              case "binary":
                              case "raw":
                                  n = e.length;
                                  break;
                              case "base64":
                                  n = D(e).length;
                                  break;
                              case "ucs2":
                              case "ucs-2":
                              case "utf16le":
                              case "utf-16le":
                                  n = 2 * e.length;
                                  break;
                              default:
                                  throw new Error("Unknown encoding")
                          }
                          return n
                      }, i.concat = function(e, t) {
                          if (Y(R(e), "Usage: Buffer.concat(list, [totalLength])nlist should be an Array."), 0 === e.length) return new i(0);
                          if (1 === e.length) return e[0];
                          var n;
                          if ("number" != typeof t)
                              for (t = 0, n = 0; n < e.length; n++) t += e[n].length;
                          var r = new i(t),
                              o = 0;
                          for (n = 0; n < e.length; n++) {
                              var a = e[n];
                              a.copy(r, o), o += a.length
                          }
                          return r
                      }, i.prototype.write = function(e, t, n, r) {
                          if (isFinite(t)) isFinite(n) || (r = n, n = void 0);
                          else {
                              var i = r;
                              r = t, t = n, n = i
                          }
                          t = Number(t) || 0;
                          var c = this.length - t;
                          n ? (n = Number(n), n > c && (n = c)) : n = c, r = String(r || "utf8").toLowerCase();
                          var h;
                          switch (r) {
                              case "hex":
                                  h = o(this, e, t, n);
                                  break;
                              case "utf8":
                              case "utf-8":
                                  h = a(this, e, t, n);
                                  break;
                              case "ascii":
                                  h = s(this, e, t, n);
                                  break;
                              case "binary":
                                  h = u(this, e, t, n);
                                  break;
                              case "base64":
                                  h = f(this, e, t, n);
                                  break;
                              case "ucs2":
                              case "ucs-2":
                              case "utf16le":
                              case "utf-16le":
                                  h = l(this, e, t, n);
                                  break;
                              default:
                                  throw new Error("Unknown encoding")
                          }
                          return h
                      }, i.prototype.toString = function(e, t, n) {
                          var r = this;
                          if (e = String(e || "utf8").toLowerCase(), t = Number(t) || 0, n = void 0 !== n ? Number(n) : n = r.length, n === t) return "";
                          var i;
                          switch (e) {
                              case "hex":
                                  i = g(r, t, n);
                                  break;
                              case "utf8":
                              case "utf-8":
                                  i = h(r, t, n);
                                  break;
                              case "ascii":
                                  i = d(r, t, n);
                                  break;
                              case "binary":
                                  i = p(r, t, n);
                                  break;
                              case "base64":
                                  i = c(r, t, n);
                                  break;
                              case "ucs2":
                              case "ucs-2":
                              case "utf16le":
                              case "utf-16le":
                                  i = v(r, t, n);
                                  break;
                              default:
                                  throw new Error("Unknown encoding")
                          }
                          return i
                      }, i.prototype.toJSON = function() {
                          return {
                              type: "Buffer",
                              data: Array.prototype.slice.call(this._arr || this, 0)
                          }
                      }, i.prototype.copy = function(e, t, n, r) {
                          var o = this;
                          if (n || (n = 0), r || 0 === r || (r = this.length), t || (t = 0), r !== n && 0 !== e.length && 0 !== o.length) {
                              Y(r >= n, "sourceEnd < sourceStart"), Y(t >= 0 && t < e.length, "targetStart out of bounds"), Y(n >= 0 && n < o.length, "sourceStart out of bounds"), Y(r >= 0 && r <= o.length, "sourceEnd out of bounds"), r > this.length && (r = this.length), e.length - t < r - n && (r = e.length - t + n);
                              var a = r - n;
                              if (100 > a || !i._useTypedArrays)
                                  for (var s = 0; a > s; s++) e[s + t] = this[s + n];
                              else e._set(this.subarray(n, n + a), t)
                          }
                      }, i.prototype.slice = function(e, t) {
                          var n = this.length;
                          if (e = S(e, n, 0), t = S(t, n, n), i._useTypedArrays) return i._augment(this.subarray(e, t));
                          for (var r = t - e, o = new i(r, void 0, !0), a = 0; r > a; a++) o[a] = this[a + e];
                          return o
                      }, i.prototype.get = function(e) {
                          return console.log(".get() is deprecated. Access using array indexes instead."), this.readUInt8(e)
                      }, i.prototype.set = function(e, t) {
                          return console.log(".set() is deprecated. Access using array indexes instead."), this.writeUInt8(e, t)
                      }, i.prototype.readUInt8 = function(e, t) {
                          return t || (Y(void 0 !== e && null !== e, "missing offset"), Y(e < this.length, "Trying to read beyond buffer length")), e >= this.length ? void 0 : this[e]
                      }, i.prototype.readUInt16LE = function(e, t) {
                          return y(this, e, !0, t)
                      }, i.prototype.readUInt16BE = function(e, t) {
                          return y(this, e, !1, t)
                      }, i.prototype.readUInt32LE = function(e, t) {
                          return m(this, e, !0, t)
                      }, i.prototype.readUInt32BE = function(e, t) {
                          return m(this, e, !1, t)
                      }, i.prototype.readInt8 = function(e, t) {
                          if (t || (Y(void 0 !== e && null !== e, "missing offset"), Y(e < this.length, "Trying to read beyond buffer length")), !(e >= this.length)) {
                              var n = 128 & this[e];
                              return n ? -1 * (255 - this[e] + 1) : this[e]
                          }
                      }, i.prototype.readInt16LE = function(e, t) {
                          return b(this, e, !0, t)
                      }, i.prototype.readInt16BE = function(e, t) {
                          return b(this, e, !1, t)
                      }, i.prototype.readInt32LE = function(e, t) {
                          return w(this, e, !0, t)
                      }, i.prototype.readInt32BE = function(e, t) {
                          return w(this, e, !1, t)
                      }, i.prototype.readFloatLE = function(e, t) {
                          return E(this, e, !0, t)
                      }, i.prototype.readFloatBE = function(e, t) {
                          return E(this, e, !1, t)
                      }, i.prototype.readDoubleLE = function(e, t) {
                          return I(this, e, !0, t)
                      }, i.prototype.readDoubleBE = function(e, t) {
                          return I(this, e, !1, t)
                      }, i.prototype.writeUInt8 = function(e, t, n) {
                          n || (Y(void 0 !== e && null !== e, "missing value"), Y(void 0 !== t && null !== t, "missing offset"), Y(t < this.length, "trying to write beyond buffer length"), P(e, 255)), t >= this.length || (this[t] = e)
                      }, i.prototype.writeUInt16LE = function(e, t, n) {
                          C(this, e, t, !0, n)
                      }, i.prototype.writeUInt16BE = function(e, t, n) {
                          C(this, e, t, !1, n)
                      }, i.prototype.writeUInt32LE = function(e, t, n) {
                          L(this, e, t, !0, n)
                      }, i.prototype.writeUInt32BE = function(e, t, n) {
                          L(this, e, t, !1, n)
                      }, i.prototype.writeInt8 = function(e, t, n) {
                          n || (Y(void 0 !== e && null !== e, "missing value"), Y(void 0 !== t && null !== t, "missing offset"), Y(t < this.length, "Trying to write beyond buffer length"), X(e, 127, -128)), t >= this.length || (e >= 0 ? this.writeUInt8(e, t, n) : this.writeUInt8(255 + e + 1, t, n))
                      }, i.prototype.writeInt16LE = function(e, t, n) {
                          A(this, e, t, !0, n)
                      }, i.prototype.writeInt16BE = function(e, t, n) {
                          A(this, e, t, !1, n)
                      }, i.prototype.writeInt32LE = function(e, t, n) {
                          B(this, e, t, !0, n)
                      }, i.prototype.writeInt32BE = function(e, t, n) {
                          B(this, e, t, !1, n)
                      }, i.prototype.writeFloatLE = function(e, t, n) {
                          U(this, e, t, !0, n)
                      }, i.prototype.writeFloatBE = function(e, t, n) {
                          U(this, e, t, !1, n)
                      }, i.prototype.writeDoubleLE = function(e, t, n) {
                          _(this, e, t, !0, n)
                      }, i.prototype.writeDoubleBE = function(e, t, n) {
                          _(this, e, t, !1, n)
                      }, i.prototype.fill = function(e, t, n) {
                          if (e || (e = 0), t || (t = 0), n || (n = this.length), "string" == typeof e && (e = e.charCodeAt(0)), Y("number" == typeof e && !isNaN(e), "value is not a number"), Y(n >= t, "end < start"), n !== t && 0 !== this.length) {
                              Y(t >= 0 && t < this.length, "start out of bounds"), Y(n >= 0 && n <= this.length, "end out of bounds");
                              for (var r = t; n > r; r++) this[r] = e
                          }
                      }, i.prototype.inspect = function() {
                          for (var e = [], t = this.length, r = 0; t > r; r++)
                              if (e[r] = k(this[r]), r === n.INSPECT_MAX_BYTES) {
                                  e[r + 1] = "...";
                                  break
                              }
                          return "<Buffer " + e.join(" ") + ">"
                      }, i.prototype.toArrayBuffer = function() {
                          if ("undefined" != typeof Uint8Array) {
                              if (i._useTypedArrays) return new i(this).buffer;
                              for (var e = new Uint8Array(this.length), t = 0, n = e.length; n > t; t += 1) e[t] = this[t];
                              return e.buffer
                          }
                          throw new Error("Buffer.toArrayBuffer not supported in this browser")
                      };
                      var W = i.prototype;
                      i._augment = function(e) {
                          return e._isBuffer = !0, e._get = e.get, e._set = e.set, e.get = W.get, e.set = W.set, e.write = W.write, e.toString = W.toString, e.toLocaleString = W.toString, e.toJSON = W.toJSON, e.copy = W.copy, e.slice = W.slice, e.readUInt8 = W.readUInt8, e.readUInt16LE = W.readUInt16LE, e.readUInt16BE = W.readUInt16BE, e.readUInt32LE = W.readUInt32LE, e.readUInt32BE = W.readUInt32BE, e.readInt8 = W.readInt8, e.readInt16LE = W.readInt16LE, e.readInt16BE = W.readInt16BE, e.readInt32LE = W.readInt32LE, e.readInt32BE = W.readInt32BE, e.readFloatLE = W.readFloatLE, e.readFloatBE = W.readFloatBE, e.readDoubleLE = W.readDoubleLE, e.readDoubleBE = W.readDoubleBE, e.writeUInt8 = W.writeUInt8, e.writeUInt16LE = W.writeUInt16LE, e.writeUInt16BE = W.writeUInt16BE, e.writeUInt32LE = W.writeUInt32LE, e.writeUInt32BE = W.writeUInt32BE, e.writeInt8 = W.writeInt8, e.writeInt16LE = W.writeInt16LE, e.writeInt16BE = W.writeInt16BE, e.writeInt32LE = W.writeInt32LE, e.writeInt32BE = W.writeInt32BE, e.writeFloatLE = W.writeFloatLE, e.writeFloatBE = W.writeFloatBE, e.writeDoubleLE = W.writeDoubleLE, e.writeDoubleBE = W.writeDoubleBE, e.fill = W.fill, e.inspect = W.inspect, e.toArrayBuffer = W.toArrayBuffer, e
                      }
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/..\node_modules\buffer\index.js", "/..\node_modules\buffer")
              }, {
                  "base64-js": 3,
                  buffer: 4,
                  ieee754: 5,
                  qC859L: 6
              }],
              5: [function(e, t, n) {
                  (function() {
                      n.read = function(e, t, n, r, i) {
                          var o, a, s = 8 * i - r - 1,
                              u = (1 << s) - 1,
                              f = u >> 1,
                              l = -7,
                              c = n ? i - 1 : 0,
                              h = n ? -1 : 1,
                              d = e[t + c];
                          for (c += h, o = d & (1 << -l) - 1, d >>= -l, l += s; l > 0; o = 256 * o + e[t + c], c += h, l -= 8);
                          for (a = o & (1 << -l) - 1, o >>= -l, l += r; l > 0; a = 256 * a + e[t + c], c += h, l -= 8);
                          if (0 === o) o = 1 - f;
                          else {
                              if (o === u) return a ? 0 / 0 : 1 / 0 * (d ? -1 : 1);
                              a += Math.pow(2, r), o -= f
                          }
                          return (d ? -1 : 1) * a * Math.pow(2, o - r)
                      }, n.write = function(e, t, n, r, i, o) {
                          var a, s, u, f = 8 * o - i - 1,
                              l = (1 << f) - 1,
                              c = l >> 1,
                              h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                              d = r ? 0 : o - 1,
                              p = r ? 1 : -1,
                              g = 0 > t || 0 === t && 0 > 1 / t ? 1 : 0;
                          for (t = Math.abs(t), isNaN(t) || 1 / 0 === t ? (s = isNaN(t) ? 1 : 0, a = l) : (a = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), t += a + c >= 1 ? h / u : h * Math.pow(2, 1 - c), t * u >= 2 && (a++, u /= 2), a + c >= l ? (s = 0, a = l) : a + c >= 1 ? (s = (t * u - 1) * Math.pow(2, i), a += c) : (s = t * Math.pow(2, c - 1) * Math.pow(2, i), a = 0)); i >= 8; e[n + d] = 255 & s, d += p, s /= 256, i -= 8);
                          for (a = a << i | s, f += i; f > 0; e[n + d] = 255 & a, d += p, a /= 256, f -= 8);
                          e[n + d - p] |= 128 * g
                      }
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/..\node_modules\ieee754\index.js", "/..\node_modules\ieee754")
              }, {
                  buffer: 4,
                  qC859L: 6
              }],
              6: [function(e, t) {
                  (function(e) {
                      function n() {}
                      var e = t.exports = {};
                      e.nextTick = function() {
                          var e = "undefined" != typeof window && window.setImmediate,
                              t = "undefined" != typeof window && window.postMessage && window.addEventListener;
                          if (e) return function(e) {
                              return window.setImmediate(e)
                          };
                          if (t) {
                              var n = [];
                              return window.addEventListener("message", function(e) {
                                      var t = e.source;
                                      if ((t === window || null === t) && "process-tick" === e.data && (e.stopPropagation(), n.length > 0)) {
                                          var r = n.shift();
                                          r()
                                      }
                                  }, !0),
                                  function(e) {
                                      n.push(e), window.postMessage("process-tick", "*")
                                  }
                          }
                          return function(e) {
                              setTimeout(e, 0)
                          }
                      }(), e.title = "browser", e.browser = !0, e.env = {}, e.argv = [], e.on = n, e.addListener = n, e.once = n, e.off = n, e.removeListener = n, e.removeAllListeners = n, e.emit = n, e.binding = function() {
                          throw new Error("process.binding is not supported")
                      }, e.cwd = function() {
                          return "/"
                      }, e.chdir = function() {
                          throw new Error("process.chdir is not supported")
                      }
                  }).call(this, e("qC859L"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/..\node_modules\process\browser.js", "/..\node_modules\process")
              }, {
                  buffer: 4,
                  qC859L: 6
              }]
          }, {}, [2])(2)
      })
  }();
